{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote/CreateNote.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\nimport { avatarData } from '../../../avatarData';\nimport './CreateNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNote = () => {\n  _s();\n\n  const [question, setQuestion] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [emotion, setEmotion] = useState(null);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    mode: 'onSubmit',\n    reValidateMode: 'onChange'\n  });\n  const emotions = avatarData[user.avatar - 1];\n  useEffect(() => {\n    setIsLoading(true);\n    notesService.getOne(user.user_id).then(response => {\n      const question = response.question.replace(/<.+>/, user.username);\n      setQuestion(question);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [user.user_id, user.username]);\n\n  const sendAnswer = data => {\n    notesService.createOne(user, {\n      avatar: emotion,\n      text: data.description\n    }).then(() => {\n      setIsSubmitted(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }, this), !isLoading && !emotion && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex px-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"animated-img mt-32\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: emotions[1],\n          alt: \"Avatar\",\n          className: \"animated-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"emotions flex flex-col items-center mt-28\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl my-10 text-center\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex flex-wrap mt-10\",\n          children: emotions.slice(2).map((emotion, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => setEmotion(i + 1),\n            src: emotion,\n            alt: \"avatar\",\n            className: \"emotion-card w-28 h-28 mx-3 my-5 rounded-3xl\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 68\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), !isLoading && emotion && !isSubmitted && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex px-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"animated-img mt-32\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: emotions[1],\n          alt: \"Avatar\",\n          className: \"animated-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"answer flex flex-col items-center mt-28\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl my-10 text-center\",\n          children: \"Why do you feel this way?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(sendAnswer),\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...register('description', {\n              required: {\n                value: true\n              }\n            }),\n            name: \"description\",\n            type: \"text\",\n            className: \"desc mt-20 bg-transparent border-2 border-orange-200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), !isLoading && emotion && isSubmitted && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex px-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"animated-img mt-32\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: emotions[1],\n          alt: \"Avatar\",\n          loop: \"infinite\",\n          className: \"animated-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title mt-36\",\n          children: \"Thank you for your response! I'd be glad to chat with you tomorrow too!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateNote, \"Go4whBYi7LoELdfPCXCvEBIsy1Q=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote/CreateNote.jsx"],"names":["useEffect","useState","notesService","useForm","avatarData","CreateNote","question","setQuestion","isLoading","setIsLoading","emotion","setEmotion","isSubmitted","setIsSubmitted","user","localStorage","getItem","JSON","parse","register","handleSubmit","mode","reValidateMode","emotions","avatar","getOne","user_id","then","response","replace","username","catch","err","console","log","sendAnswer","data","createOne","text","description","slice","map","i","required","value"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\n\nimport { avatarData } from '../../../avatarData';\n\nimport './CreateNote.css';\n\nconst CreateNote = () => {\n    const [question, setQuestion] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [emotion, setEmotion] = useState(null);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\n    const { register, handleSubmit } = useForm({ mode: 'onSubmit', reValidateMode: 'onChange' });\n\n    const emotions = avatarData[user.avatar - 1];\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        notesService.getOne(user.user_id)\n            .then(response => {\n                const question = response.question.replace(/<.+>/, user.username);\n                setQuestion(question);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user.user_id, user.username]);\n\n    const sendAnswer = (data) => {\n        notesService.createOne(user, { avatar: emotion, text: data.description })\n            .then(() => {\n                setIsSubmitted(true);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    } \n\n    return (\n        <section className=\"flex flex-col items-center justify-center\">\n            {isLoading && <p>Loading ...</p>}\n            {!isLoading && !emotion &&\n                <section className=\"flex px-10\">\n                    <article className=\"animated-img mt-32\">\n                        <img src={emotions[1]} alt=\"Avatar\" className=\"animated-avatar\"/>\n                    </article>\n\n                    <article className=\"emotions flex flex-col items-center mt-28\">\n                        <h1 className=\"text-5xl my-10 text-center\">{question}</h1>\n                        <section className=\"flex flex-wrap mt-10\">\n                            {emotions.slice(2).map((emotion, i) => <img key={i} onClick={() => setEmotion(i + 1)} src={emotion} alt=\"avatar\" className=\"emotion-card w-28 h-28 mx-3 my-5 rounded-3xl\"/>)}\n                        </section>\n                    </article>\n                </section>\n            }\n\n            {!isLoading && emotion && !isSubmitted &&\n                <section className=\"flex px-10\">\n                    <article className=\"animated-img mt-32\">\n                        <img src={emotions[1]} alt=\"Avatar\" className=\"animated-avatar\"/>\n                    </article>\n\n                    <article className=\"answer flex flex-col items-center mt-28\">\n                        <h1 className=\"text-5xl my-10 text-center\">Why do you feel this way?</h1>\n                        \n                        <form onSubmit={handleSubmit(sendAnswer)} className=\"flex flex-col\">\n                            <textarea {...register('description', { required: { value: true } })} name=\"description\" type=\"text\" className=\"desc mt-20 bg-transparent border-2 border-orange-200\" />\n                            <input type=\"submit\" value=\"Send Answer\" />\n                        </form>\n                    </article>\n                </section>\n            }\n\n            {!isLoading && emotion && isSubmitted &&\n                <section className=\"flex px-10\">\n                    <article className=\"animated-img mt-32\">\n                        <img src={emotions[1]} alt=\"Avatar\" loop=\"infinite\" className=\"animated-avatar\"/>\n                    </article>\n\n                    <article>\n                        <h1 className=\"title mt-36\">Thank you for your response! I'd be glad to chat with you tomorrow too!</h1>\n                    </article>\n                </section>\n            }\n        </section>\n    )\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}