{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote/CreateNote.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\nimport './CreateNote.css';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNote = () => {\n  _s();\n\n  const [question, setQuestion] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [emotion, setEmotion] = useState(null);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    mode: 'onSubmit',\n    reValidateMode: 'onChange'\n  });\n  const emotions = {\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-1_vxvybb.png': 1,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-2_ticimn.png': 2,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-3_tbsyae.png': 3,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-4_u2vxbg.png': 4,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-5_zhqikx.png': 5\n  };\n  useEffect(() => {\n    console.log('in');\n\n    if (!user) {\n      navigate('/');\n    }\n  }); // useEffect(() => {\n  //     setIsLoading(true);\n  //     notesService.getOne(user.user_id)\n  //         .then(response => {\n  //             const question = response.question.replace(/<.+>/, user.username);\n  //             setQuestion(question);\n  //             setIsLoading(false);\n  //         })\n  //         .catch(err => {\n  //             console.log(err);\n  //         })\n  // }, [user.user_id, user.username]);\n  // const sendAnswer = (data) => {\n  //     notesService.createOne(user, { avatar: emotion, text: data.description })\n  //         .then(() => {\n  //             setIsSubmitted(true);\n  //         })\n  //         .catch(err => {\n  //             console.log(err);\n  //         });\n  // } \n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this) // <section className=\"flex flex-col items-center justify-center\">\n  //     {isLoading && <p>Loading ...</p>}\n  //     {!isLoading && !emotion &&\n  //         <section className=\"flex px-10\">\n  //             <article className=\"animated-img mt-32\">\n  //                 <img src=\"https://res.cloudinary.com/drinka/image/upload/v1648968348/da-day/cat-animation_gyamxz.gif\" alt=\"Cat\" className=\"animated-cat\"/>\n  //             </article>\n  //             <article className=\"emotions flex flex-col items-center mt-28\">\n  //                 <h1 className=\"text-5xl my-10 text-center\">{question}</h1>\n  //                 <section className=\"flex flex-wrap mt-10\">\n  //                     {Object.entries(emotions).map((kvp, i) => <img key={i} onClick={() => setEmotion(kvp[1])} src={kvp[0]} alt=\"avatar\" className=\"emotion-card w-28 h-28 mx-3 my-5 rounded-3xl\"/>)}\n  //                 </section>\n  //             </article>\n  //         </section>\n  //     }\n  //     {!isLoading && emotion && !isSubmitted &&\n  //         <section className=\"flex px-10\">\n  //             <article className=\"animated-img mt-32\">\n  //                 <img src=\"https://res.cloudinary.com/drinka/image/upload/v1648968348/da-day/cat-animation_gyamxz.gif\" alt=\"Cat\" className=\"animated-cat\"/>\n  //             </article>\n  //             <article className=\"answer flex flex-col items-center mt-28\">\n  //                 <h1 className=\"text-5xl my-10 text-center\">Why do you feel this way?</h1>\n  //                 <form onSubmit={handleSubmit(sendAnswer)} className=\"flex flex-col\">\n  //                     <textarea {...register('description', { required: { value: true } })} name=\"description\" type=\"text\" className=\"desc mt-20 bg-transparent border-2 border-orange-200\" />\n  //                     <input type=\"submit\" value=\"Send Answer\" />\n  //                 </form>\n  //             </article>\n  //         </section>\n  //     }\n  //     {!isLoading && emotion && isSubmitted &&\n  //         <section className=\"flex px-10\">\n  //             <article className=\"animated-img mt-32\">\n  //                 <img src=\"https://res.cloudinary.com/drinka/image/upload/v1648968348/da-day/cat-animation_gyamxz.gif\" alt=\"Cat\" loop=\"infinite\" className=\"animated-cat\"/>\n  //             </article>\n  //             <article>\n  //                 <h1 className=\"title mt-36\">Thank you for your response! I'd be glad to chat with you tomorrow too!</h1>\n  //             </article>\n  //         </section>\n  //     }\n  // </section>\n  ;\n};\n\n_s(CreateNote, \"HfgPnuucORTLkBzONdhzCz34KNc=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote/CreateNote.jsx"],"names":["useEffect","useState","notesService","useForm","useNavigate","CreateNote","question","setQuestion","isLoading","setIsLoading","emotion","setEmotion","isSubmitted","setIsSubmitted","navigate","user","localStorage","getItem","JSON","parse","register","handleSubmit","mode","reValidateMode","emotions","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMa,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,IAAvF;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BlB,OAAO,CAAC;AAAEmB,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,cAAc,EAAE;AAApC,GAAD,CAA1C;AAEA,QAAMC,QAAQ,GAAG;AACb,uGAAmG,CADtF;AAEb,uGAAmG,CAFtF;AAGb,uGAAmG,CAHtF;AAIb,uGAAmG,CAJtF;AAKb,uGAAmG;AALtF,GAAjB;AAQAxB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,QAAI,CAACX,IAAL,EAAW;AACPD,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GALQ,CAAT,CAnBqB,CA0BrB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA/CJ;AAiDH,CAnGD;;GAAMT,U;UAMeD,W,EAGkBD,O;;;KATjCE,U;AAqGN,eAAeA,UAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\n\nimport './CreateNote.css';\nimport { useNavigate } from \"react-router\";\n\nconst CreateNote = () => {\n    const [question, setQuestion] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [emotion, setEmotion] = useState(null);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    const navigate = useNavigate();\n\n    const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n    const { register, handleSubmit } = useForm({ mode: 'onSubmit', reValidateMode: 'onChange' });\n\n    const emotions = { \n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-1_vxvybb.png': 1,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-2_ticimn.png': 2,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-3_tbsyae.png': 3,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-4_u2vxbg.png': 4,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-5_zhqikx.png': 5\n    };\n\n    useEffect(() => {\n        console.log('in');\n        if (!user) {\n            navigate('/');\n        }\n    })\n\n    // useEffect(() => {\n    //     setIsLoading(true);\n\n    //     notesService.getOne(user.user_id)\n    //         .then(response => {\n    //             const question = response.question.replace(/<.+>/, user.username);\n    //             setQuestion(question);\n    //             setIsLoading(false);\n    //         })\n    //         .catch(err => {\n    //             console.log(err);\n    //         })\n    // }, [user.user_id, user.username]);\n\n    // const sendAnswer = (data) => {\n    //     notesService.createOne(user, { avatar: emotion, text: data.description })\n    //         .then(() => {\n    //             setIsSubmitted(true);\n    //         })\n    //         .catch(err => {\n    //             console.log(err);\n    //         });\n    // } \n\n    return (\n        <h1>Test</h1>\n        // <section className=\"flex flex-col items-center justify-center\">\n        //     {isLoading && <p>Loading ...</p>}\n        //     {!isLoading && !emotion &&\n        //         <section className=\"flex px-10\">\n        //             <article className=\"animated-img mt-32\">\n        //                 <img src=\"https://res.cloudinary.com/drinka/image/upload/v1648968348/da-day/cat-animation_gyamxz.gif\" alt=\"Cat\" className=\"animated-cat\"/>\n        //             </article>\n\n        //             <article className=\"emotions flex flex-col items-center mt-28\">\n        //                 <h1 className=\"text-5xl my-10 text-center\">{question}</h1>\n        //                 <section className=\"flex flex-wrap mt-10\">\n        //                     {Object.entries(emotions).map((kvp, i) => <img key={i} onClick={() => setEmotion(kvp[1])} src={kvp[0]} alt=\"avatar\" className=\"emotion-card w-28 h-28 mx-3 my-5 rounded-3xl\"/>)}\n        //                 </section>\n        //             </article>\n        //         </section>\n        //     }\n\n        //     {!isLoading && emotion && !isSubmitted &&\n        //         <section className=\"flex px-10\">\n        //             <article className=\"animated-img mt-32\">\n        //                 <img src=\"https://res.cloudinary.com/drinka/image/upload/v1648968348/da-day/cat-animation_gyamxz.gif\" alt=\"Cat\" className=\"animated-cat\"/>\n        //             </article>\n\n        //             <article className=\"answer flex flex-col items-center mt-28\">\n        //                 <h1 className=\"text-5xl my-10 text-center\">Why do you feel this way?</h1>\n                        \n        //                 <form onSubmit={handleSubmit(sendAnswer)} className=\"flex flex-col\">\n        //                     <textarea {...register('description', { required: { value: true } })} name=\"description\" type=\"text\" className=\"desc mt-20 bg-transparent border-2 border-orange-200\" />\n        //                     <input type=\"submit\" value=\"Send Answer\" />\n        //                 </form>\n        //             </article>\n        //         </section>\n        //     }\n\n        //     {!isLoading && emotion && isSubmitted &&\n        //         <section className=\"flex px-10\">\n        //             <article className=\"animated-img mt-32\">\n        //                 <img src=\"https://res.cloudinary.com/drinka/image/upload/v1648968348/da-day/cat-animation_gyamxz.gif\" alt=\"Cat\" loop=\"infinite\" className=\"animated-cat\"/>\n        //             </article>\n\n        //             <article>\n        //                 <h1 className=\"title mt-36\">Thank you for your response! I'd be glad to chat with you tomorrow too!</h1>\n        //             </article>\n        //         </section>\n        //     }\n        // </section>\n    );\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}