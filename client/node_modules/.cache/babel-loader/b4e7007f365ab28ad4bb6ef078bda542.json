{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/WeeklyReport/ReportChart.jsx\";\nimport React from 'react';\nimport { Bar, BarChart, CartesianAxis, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend } from 'recharts';\nimport { formatDate } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReportChart = _ref => {\n  let {\n    emotions\n  } = _ref;\n  const emotionColors = {\n    1: '#db1414',\n    2: '#e07502',\n    3: '#ffd500',\n    4: '#75db40',\n    5: 'green'\n  };\n  let data = [];\n  emotions.forEach(emotionObj => {\n    data.push({\n      name: formatDate(emotionObj.date),\n      uv: Number(emotionObj.emotion),\n      fill: emotionColors[emotionObj.emotion]\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: 1200,\n      height: 550,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [0, 5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          cursor: {\n            fill: '#e8e4e3'\n          },\n          className: \"opacity-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          name: \"Emoji rate\",\n          type: \"monotone\",\n          dataKey: \"uv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ReportChart;\nexport default ReportChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportChart\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/WeeklyReport/ReportChart.jsx"],"names":["React","Bar","BarChart","CartesianAxis","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","Legend","formatDate","ReportChart","emotions","emotionColors","data","forEach","emotionObj","push","name","date","uv","Number","emotion","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,aAAxB,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,OAArD,EAA8DC,mBAA9D,EAAmFC,aAAnF,EAAkGC,MAAlG,QAAgH,UAAhH;AACA,SAASC,UAAT,QAA2B,aAA3B;;;;AAEA,MAAMC,WAAW,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpC,QAAMC,aAAa,GAAG;AAAE,OAAG,SAAL;AAAgB,OAAG,SAAnB;AAA8B,OAAG,SAAjC;AAA4C,OAAG,SAA/C;AAA0D,OAAG;AAA7D,GAAtB;AACA,MAAIC,IAAI,GAAG,EAAX;AAEAF,EAAAA,QAAQ,CAACG,OAAT,CAAiBC,UAAU,IAAI;AAC7BF,IAAAA,IAAI,CAACG,IAAL,CAAU;AAACC,MAAAA,IAAI,EAAER,UAAU,CAACM,UAAU,CAACG,IAAZ,CAAjB;AAAoCC,MAAAA,EAAE,EAAEC,MAAM,CAACL,UAAU,CAACM,OAAZ,CAA9C;AAAoEC,MAAAA,IAAI,EAAEV,aAAa,CAACG,UAAU,CAACM,OAAZ;AAAvF,KAAV;AACD,GAFD;AAKA,sBACE;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE,IAA5B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAER,IAHR;AAAA,gCAKE,QAAC,aAAD;AAAe,UAAA,eAAe,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,OAAD;AAAS,UAAA,MAAM,EAAE;AAACS,YAAAA,IAAI,EAAE;AAAP,WAAjB;AAAoC,UAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAC,YAAV;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,OAAO,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CA3BD;;KAAMZ,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Bar, BarChart, CartesianAxis, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend } from 'recharts';\nimport { formatDate } from '../../utils';\n\nconst ReportChart = ({ emotions }) => {\n  const emotionColors = { 1: '#db1414', 2: '#e07502', 3: '#ffd500', 4: '#75db40', 5: 'green' };\n  let data = [];\n\n  emotions.forEach(emotionObj => {\n    data.push({name: formatDate(emotionObj.date), uv: Number(emotionObj.emotion), fill: emotionColors[emotionObj.emotion] })\n  });\n  \n\n  return (\n    <>\n      <ResponsiveContainer width={1200} height={550}>\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n        >\n          <CartesianGrid strokeDasharray={\"3 3\"} />\n          <XAxis dataKey=\"name\" />\n          <YAxis domain={[0, 5]} />\n          <Tooltip cursor={{fill: '#e8e4e3'}} className=\"opacity-20\"/>\n          <Legend />\n          <Bar name=\"Emoji rate\" type=\"monotone\" dataKey=\"uv\"  />\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n\nexport default ReportChart;"]},"metadata":{},"sourceType":"module"}